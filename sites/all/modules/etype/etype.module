<?php

/**
 * @file
 * Custom functions and hooks for Etype Services
 *
 */

/**
 * Implements hook_menu().
 */
function etype_menu()
{

    $items = array();

    $items['etype-classified-import'] = array(
        'title' => t('Import Classified Ads'),
        'page callback' => 'etype_classified_ad_importer',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access administration pages')
    );

    return $items;

}

/* run job at 3:00 am */
function etype_cronapi($op, $job = NULL)
{

    $items['etype_cron'] = array(
        'description' => 'Import Classified Ads',
        'rule' => '0 * * * *',
        'callback' => 'etype_classified_ad_importer',
        'arguments' => array('all'),
    );

    return $items;
}

/**
 * map xml classified categories to Drupal taxonomy items
 * @param FeedsSource $source
 * @param $entity
 * @param $item
 * @param $entity_id
 */
function etype_classfied_mapping($vid)
{

    /* ad categories */
    $categories = array(
        "4010" => "210",
        "4020" => "211",
        "1660" => "212",
        "100" => "213",
        "4030" => "214",
        "0410" => "215",
        "0710" => "216",
        "0420" => "217",
        "0530" => "218",
        "0415" => "219",
        "0505" => "220",
        "0535" => "221",
        "0340" => "222",
        "0730" => "223",
        "0735" => "276",
        "0815" => "224",
        "1670" => "225",
        "0230" => "226",
        "0545" => "227",
        "1560" => "362",
        "1710" => "229",
        "0740" => "230",
        "0830" => "231",
        "4040" => "232",
        "0725" => "233",
        "0820" => "234",
        "0215" => "235",
        "4050" => "236",
        "4060" => "237",
        "3040" => "238",
        "1650" => "239",
        "1640" => "240",
        "1590" => "362",
        "1740" => "242",
        "4070" => "243",
        "4080" => "244",
        "1580" => "362",
        "1730" => "246",
        "0325" => "247",
        "4090" => "248",
        "1630" => "249",
        "0300" => "250",
        "4100" => "251",
        "0425" => "252",
        "0825" => "253",
        "1620" => "254",
        "0430" => "255",
        "0310" => "256",
        "0315" => '300',
        "0910" => "258",
        "0400" => "259",
        "0905" => "260",
        "1005" => "261",
        "1010" => "262",
        "4110" => "362",
        "4120" => "264",
        "1510" => "362",
        "1600" => "266",
        "0615" => "267",
        "0435" => "268",
        "0305" => "270",
        "1680" => "272",
        "1540" => "362",
        "4000" => "362",
        "0210" => "275",
        "0705" => "276",
        "0805" => "277",
        "0225" => "281",
        "1610" => "282",
        "0120" => "284",
        "0235" => "285",
        "0900" => "286",
        "0810" => "288",
        "0205" => "289",
        "0440" => "290",
        "1535" => "362",
        "1500" => "362",
        "3000" => "362",
        "4130" => "294",
        "4140" => "303",
        "4150" => "311",
        "4180" => "362",
        "4160" => "327",
        "4190" => "339",
        "0515" => "340",
        "4200" => "341",
        "0515" => "340",
        "0115" => "342",
        "0240" => "343",
        "0500" => "344",
        "0510" => "345",
        "0715" => "346",
        "0520" => "347",
        "0555" => "348",
        "0450" => "349",
        "0620" => "350",
        "0755" => "351",
        "0750" => "352",
        "1570" => "362",
        "1720" => "354",
        "0345" => "356",
        "01405" => "357",
        "0405" => "358",
        "0915" => "299",
        "0125" => "269"
    );


    if (!isset($vid)) {
        drupal_set_message(t("No category id for item"), 'error');
        return;
    } else {

        $ad_cat = 0;

        foreach ($categories as $k => $v) {
            if ($vid == $k) {
                $ad_cat = $v;
                continue;
            }
        }

        if ($ad_cat == 0) {
            drupal_set_message(t("$vid not matched"), 'error');
        }
    }
    return $ad_cat;

}

/**
 * Create Entity
 * @param array $item
 * @param array $values
 * @param string $entity_type
 */
function etype_entity_create($item = array(), $values = array(), $entity_type = 'node')
{

    $entity = entity_create($entity_type, $values);
    $ewrapper = entity_metadata_wrapper($entity_type, $entity);
    if (count($item) > 0) {
        foreach ($item as $k => $v) {
            switch ($k) {

                case 'body':
                    $ewrapper->body->set(array('value' => $v));
                    break;

                case 'field_expires':
                    $date = new DateTime($v);
                    $entity->field_expires[LANGUAGE_NONE][0] = array(
                        'value' => date_format($date, 'Y-m-d'),
                        'timezone' => 'UTC',
                        'timezone_db' => 'UTC',
                    );
                    break;

                case 'category':
                    $v = intval($v);
                    $ewrapper->classified_category->set($v);
                    break;

                default:
                    $ewrapper->$k->set($v);
            }
        }
        $ewrapper->save(TRUE);
    }
}

/**
 * feeds cron job
 */
function etype_classified_ad_importer()
{

    global $user;
    $url = 'http://www.etypeclassifieds.com/toccoaxml/CNI_CTR.xml';

    $values = array(
        'type' => 'classified',
        'uid' => $user->uid,
        'status' => 1,
        'comment' => 0,
        'promote' => 0,
        'language' => LANGUAGE_NONE,
    );

    $xml = file_get_contents($url);
    if ($xml !== FALSE) {

        /* delete all current ads */
        _delete_all_quick(array('classified'));
        return;


        $ad_obj = simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA);
        $i = 0;
        if (count($ad_obj) > 0) {

            foreach ($ad_obj as $ad) {

                // xml object processing to make array
                $array = array();
                foreach ($ad as $k => $v) {
                    $v = (array)$v;
                    $array[$k] = $v[0];
                }

                // print_r($array);
                // echo $ad->ItemId . "\r\n";

                /* looking for existing nodes with the same ItemId */
                $query = new EntityFieldQuery();
                $query->entityCondition('entity_type', 'node')
                    ->entityCondition('bundle', 'classified')
                    ->fieldCondition('field_guid', 'value', $array['ItemId'], '=');
                $result = $query->execute();
                // dpq($query);
                // print_r($result);

                /* if no node found, save a new one */
                if (count($result) === 0) {
                    // echo 'No node found' . "\r\n";
                    // save new node
                    $node = array(
                        'title' => $array['ItemTitle'],
                        'body' => $array['ItemDesc'],
                        'field_expires' => $array['expDate'],
                        'category' => etype_classfied_mapping($array['categoryId']),
                        'field_guid' => $array['ItemId']
                    );
                    // print_r($node);
                    $values['created'] = strtotime($array['startDate']);
                    etype_entity_create($node, $values);
                    $i++;
                }
                // echo "\r\n\r\n";
            }
        }
        watchdog('etype', "EType Classified Importer added %num nodes", $variables = array('%num' => $i), $severity = WATCHDOG_NOTICE);
        // drupal_set_message(t("EType Classified Importer added $i nodes"), 'status');
    } else {
        watchdog('etype', "EType Classified Importer found no xml at %url", $variables = array('%url' => $url), $severity = WATCHDOG_NOTICE);
    }

    /* Delete Expired Nodes */
    $date = new DateTime();
    $formatted_date = date_format($date, 'Y-m-d');
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'classified')
        ->fieldCondition('field_expires', 'value', $formatted_date, '<');
    $result = $query->execute();
    // dpq($query);
    if (count($result) > 0) {
        $i = 0;
        $nids = array_keys($result['node']);
        foreach ($nids as $nid) {
            node_delete($nid);
            $i++;
        }
        watchdog('etype', "EType Classified Importer deleted %num expired nodes", $variables = array('%num' => $i), $severity = WATCHDOG_NOTICE);
        // drupal_set_message(t("EType Classified Importer deleted $i expired nodes"), 'status');
    } else {
        watchdog('etype', "EType Classified Importer found no expired nodes to delete", $variables = array(), $severity = WATCHDOG_NOTICE);
    }
}