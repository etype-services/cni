<?php

/**
 * @file
 * Custom functions and hooks for Etype Services
 *
 */

/**
 * map xml classified categories to Drupal taxonomy items
 * @param FeedsSource $source
 * @param $entity
 * @param $item
 * @param $entity_id
 */
function etype_feeds_presave(FeedsSource $source, $entity, $item, $entity_id) {

  /* ad categories */
  $categories = array(
    "1660" => "212",
    "100" => "213",
    "4030" => "362",
    "0410" => "215",
    "0710" => "216",
    "0420" => "217",
    "0530" => "218",
    "0415" => "219",
    "0505" => "220",
    "0535" => "221",
    "0340" => "222",
    "0730" => "223",
    "0815" => "224",
    "1670" => "225",
    "0230" => "226",
    "0545" => "227",
    "1560" => "362",
    "1710" => "229",
    "0740" => "230",
    "0830" => "231",
    "4040" => "362",
    "0725" => "233",
    "0820" => "234",
    "0215" => "235",
    "4020" => "362",
    "4050" => "362",
    "4060" => "362",
    "3040" => "238",
    "1650" => "239",
    "1640" => "240",
    "1590" => "362",
    "1740" => "242",
    "4070" => "362",
    "4080" => "362",
    "4090" => "362",
    "1580" => "362",
    "1730" => "246",
    "0325" => "247",
    "1630" => "249",
    "0300" => "250",
    "4100" => "362",
    "0425" => "252",
    "0825" => "253",
    "1620" => "254",
    "0430" => "255",
    "0310" => "256",
    "0910" => "258",
    "0400" => "259",
    "0905" => "286",
    "1005" => "261",
    "1010" => "262",
    "4010" => "362",
    "4110" => "362",
    "4120" => "362",
    "4130" => "362",
    "4140" => "362",
    "4150" => "362",
    "4160" => "362",
    "4170" => "362",
    "4180" => "362",
    "4190" => "362",
    "4200" => "362",
    "1510" => "362",
    "1600" => "266",
    "0615" => "267",
    "0435" => "268",
    "0305" => "270",
    "1680" => "272",
    "1540" => "362",
    "4000" => "362",
    "0210" => "275",
    "0705" => "276",
    "0805" => "277",
    "0225" => "281",
    "1610" => "282",
    "0120" => "284",
    "0235" => "285",
    "0900" => "286",
    "0810" => "288",
    "0205" => "289",
    "0440" => "290",
    "1535" => "362",
    "1500" => "362",
    "3000" => "362",
    "0105" => "296",
    "0610" => "297",
    "0745" => "298",
    "0915" => "299",
    "0315" => "300",
    "0125" => "301",
    "0445" => "304",
    "0245" => "305",
    "0735" => "306",
    "1000" => "307",
    "0525" => "308",
    "1520" => "362",
    "1655" => "310",
    "1550" => "362",
    "1700" => "313",
    "1530" => "362",
    "1690" => "315",
    "3010" => "316",
    "3020" => "317",
    "0220" => "318",
    "0330" => "319",
    "0550" => "320",
    "0110" => "321",
    "0600" => "324",
    "0605" => "325",
    "3030" => "328",
    "4170" => "329",
    "0800" => "330",
    "0700" => "331",
    "0835" => "332",
    "0320" => "335",
    "0540" => "359",
    "0720" => "337",
    "0200" => "338",
    "0515" => "340",
    "0115" => "342",
    "0240" => "343",
    "0500" => "344",
    "0510" => "345",
    "0715" => "346",
    "0520" => "347",
    "0555" => "348",
    "0450" => "349",
    "0620" => "350",
    "0755" => "351",
    "0750" => "352",
    "1570" => "362",
    "1720" => "354",
    "0345" => "356",
    "01405" => "357",
    "0405" => "358"
  );

  if (! isset($item['xpathparser:5'])) {
    drupal_set_message(t("No category id for item"), 'error');
    $entity->feeds_item->skip = TRUE;
  } else {
    $xml_cat = $item['xpathparser:5'];

  	$ad_cat = 0;

  	foreach ($categories as $k => $v) {
      if ($xml_cat == $k) {
     	$ad_cat = $v;
        continue;
      }
    }

    if ($ad_cat > 0) {
      $entity->classified_category['und'][0]['tid'] = $ad_cat;
    } else {
  	  drupal_set_message(t("$xml_cat not matched"), 'error');
      $entity->feeds_item->skip = TRUE;
    }
  }
  
}

/* feeds cron job */
function etype_cron() {
  // $interval = variable_get('etype_custom_interval', 60 * 60 * 24); // 1 day
  // We usually don't want to act every time cron runs (which could be every
  // minute) so keep a time for the next run in a variable.
  // if (time() >= variable_get('etype_custom_next_execution', 0))
  // {
	$name = 'classified_ad_importer';
  	$source = feeds_source($name);
	$source->import();
	// variable_set('etype_custom_next_execution', time() + $interval);
  // }
}