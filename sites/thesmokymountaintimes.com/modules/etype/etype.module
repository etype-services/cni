<?php

/**
 * @file
 * Custom functions and hooks for Etype Services
 *
 */

/**
 * Implements hook_menu().
 */
function etype_menu() {

  $items = array();

  /* Drupal doesn't seem to like the double day entry, so giving access to anybody to run from system cron */
  $items['etype-classified-import'] = array(
    'title' => t('Import Classified Ads'),
    'page callback' => 'etype_classified_ad_importer',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content')
  );

  return $items;

}

/*
 * Run job at 7:30am Eastern every Wednesday and Friday
 */
function etype_cronapi($op, $job = NULL) {

  $items['etype_cron'] = array(
    'title' => 'Import Classified Ads',
    'module' => 'etype',
    'callback' => 'etype_classified_ad_importer',
    'scheduler' => array(
      'name' => 'crontab',
      'crontab' => array(
        'rules' => array('30 7 * * 3,5'),
      ),
    ),
  );

  return $items;
}

/**
 * map xml classified categories to Drupal taxonomy items
 * @param FeedsSource $source
 * @param $entity
 * @param $item
 * @param $entity_id
 */
function etype_classfied_mapping($vid) {
  $categories = array();

  include(__DIR__ . '/etype_mapping.php');

  if (!isset($vid)) {
    drupal_set_message(t("No category id for item"), 'error');
    return;
  }
  else {

    $ad_cat = 0;

    foreach ($categories as $k => $v) {
      if ($vid == $k) {
        $ad_cat = $v;
        continue;
      }
    }

    if ($ad_cat == 0) {
      drupal_set_message(t("$vid not matched"), 'error');
    }
  }
  return $ad_cat;

}

/**
 * Create Entity
 * @param array $item
 * @param array $values
 * @param string $entity_type
 */
function etype_entity_create($item = array(), $values = array(), $entity_type = 'node') {

  $entity = entity_create($entity_type, $values);
  $ewrapper = entity_metadata_wrapper($entity_type, $entity);
  if (count($item) > 0) {
    foreach ($item as $k => $v) {
      switch ($k) {

        case 'body':
          $ewrapper->body->set(array('value' => $v));
          break;

        case 'category':
          $v = intval($v);
          $ewrapper->classified_category->set($v);
          break;

        default:
          $ewrapper->$k->set($v);
      }
    }
    $ewrapper->save(TRUE);
  }
}

/**
 * feeds cron job
 */
function etype_classified_ad_importer() {

  // watchdog('etype', "%d", $variables = array('%d' => $_SERVER['HTTP_REFERER']), $severity = WATCHDOG_NOTICE);

  global $user;
  $url = '';
  include(__DIR__ . '/etype_mapping.php');

  $values = array(
    'type' => 'classified',
    'uid' => $user->uid,
    'status' => 1,
    'comment' => 0,
    'promote' => 0,
    'language' => LANGUAGE_NONE,
  );

  $xml = file_get_contents($url);
  if ($xml !== FALSE) {

    $ad_obj = simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA);
    $i = 0;
    if (count($ad_obj) > 0) {

      /* delete all current ads */
      $query = new EntityFieldQuery();
      $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'classified');
      $result = $query->execute();
      // dpq($query);
      if (count($result) > 0) {
        $nids = array_keys($result['node']);
        $i = count($nids);
        node_delete_multiple($nids);
        watchdog('etype', "EType Classified Importer deleted %num Classified Ads", $variables = array('%num' => $i), $severity = WATCHDOG_NOTICE);
        // drupal_set_message(t("EType Classified Importer deleted $i expired nodes"), 'status');
      }
      else {
        watchdog('etype', "EType Classified Importer found no Classified Ads to delete", $variables = array(), $severity = WATCHDOG_NOTICE);
      }

      $i = 0;
      /* loop over xml and add new Classified Ads */
      foreach ($ad_obj as $ad) {

        // xml object processing to make array
        $array = array();
        foreach ($ad as $k => $v) {
          $v = (array) $v;
          if (isset($v[0])) {
            $array[$k] = $v[0];
          }
        }

        /* check for valid matched category, otherwise there will be an error in node creation */
        $category = etype_classfied_mapping($array['categoryId']);
        if ($category > 0) {
          $node = array(
            'title' => $array['ItemTitle'],
            'body' => $array['ItemDesc'],
            'category' => etype_classfied_mapping($array['categoryId'])
          );
          // print_r($node);
          $values['created'] = strtotime($array['startDate']);
          etype_entity_create($node, $values);
          $i++;
        }
      }
    }
    watchdog('etype', "EType Classified Importer added %num Classified Ads", $variables = array('%num' => $i), $severity = WATCHDOG_NOTICE);
    // drupal_set_message(t("EType Classified Importer added $i nodes"), 'status');
  }
  else {
    watchdog('etype', "EType Classified Importer found no xml at %url", $variables = array('%url' => $url), $severity = WATCHDOG_NOTICE);
  }
}

/**
 * @param $node
 */
function etype_node_update($node) {
  $url = url('<front>', array('absolute' => TRUE));
  cache_clear_all($url, 'cache_page');
}